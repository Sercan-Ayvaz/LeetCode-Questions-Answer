
/*
-----916. Word Subsets-----
You are given two string arrays words1 and words2.

A string b is a subset of string a if every letter in b occurs in a including multiplicity.

For example, "wrr" is a subset of "warrior" but is not a subset of "world".
A string a from words1 is universal if for every string b in words2, b is a subset of a.

Return an array of all the universal strings in words1. You may return the answer in any order.

 

Example 1:
    Input: words1 = ["amazon","apple","facebook","google","leetcode"], words2 = ["e","o"]
    Output: ["facebook","google","leetcode"]

Example 2:
    Input: words1 = ["amazon","apple","facebook","google","leetcode"], words2 = ["l","e"]
    Output: ["apple","google","leetcode"]
 */

using System;
using System.Collections.Generic;
namespace ConsoleApp1
{
    public class Solution
    {
        public static void Main()
        {
            string[] words = { "amazon", "apple", "facebook", "google", "leetcode" };
            string[] wordsChar = { "e", "o" };
            string[] wordsTwo = { "amazon", "apple", "facebook", "google", "leetcode" };
            string[] wordsCharTwo = { "l", "e" };
            Solution solution = new Solution();
            ScreenPrint(solution.WordSubsets(words, wordsChar));
            ScreenPrint(solution.WordSubsets(wordsTwo, wordsCharTwo));
        }
        public IList<string> WordSubsets(string[] words1, string[] words2)
        {
            IList<string> outputWords = new List<string>();
            string coordinatedValue = "";
            for (int i = 0; i < words1.Length; i++)
            {
                if (words1[i].Contains(words2[0]) && words1[i].Contains(words2[1]))
                {
                    coordinatedValue = words1[i];
                    outputWords.Add(coordinatedValue);
                }
            }
            return outputWords;
        }

        public static void ScreenPrint(IList<string> outputWords)
        {
            IList<string> output = outputWords;
            foreach (var item in output)
            {
                Console.Write(item + " ");
            }
            Console.WriteLine();
        }
    }
}
